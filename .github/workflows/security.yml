name: Security & Quality (Simple)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday

jobs:
  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libmicrohttpd-dev libcurl4-openssl-dev libreadline-dev zlib1g-dev cppcheck clang-tools valgrind
          
      - name: Build project
        run: |
          make clean
          make
          
      - name: Run tests
        run: |
          ./bin/myco pass.myco
          
      - name: Static analysis with cppcheck
        run: |
          cppcheck --enable=all --inconclusive --std=c99 --error-exitcode=0 src/ include/ || true
          
      - name: Clang static analysis
        run: |
          find src/ include/ -name "*.c" -o -name "*.h" | head -10 | xargs clang-tidy --checks='*' --warnings-as-errors='*' || true
          
      - name: Memory leak detection
        run: |
          echo 'print("Hello World")' | valgrind --leak-check=full --show-leak-kinds=all --error-exitcode=0 ./bin/myco || true
          
      - name: Security-focused compilation
        run: |
          make clean
          CFLAGS="-fstack-protector-strong -D_FORTIFY_SOURCE=2 -fPIE -Wformat -Wformat-security -Werror=format-security" make
          echo 'print("Security test")' | ./bin/myco
          
      - name: Check for common security issues
        run: |
          # Check for unsafe functions
          grep -r "strcpy\|strcat\|sprintf\|gets" src/ || echo "No unsafe functions found"
          
          # Check for buffer overflow potential
          grep -r "scanf\|gets" src/ || echo "No scanf/gets found"
          
          # Check for format string vulnerabilities
          grep -r "printf.*%s" src/ || echo "No format string issues found"
          
      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-${{ github.run_number }}
          path: |
            *.log
            cppcheck-results.txt
