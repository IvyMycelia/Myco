# Simple Performance Benchmark
# Basic performance testing without complex timing

const ITERATIONS = 100000

# Simple arithmetic benchmark
func arithmetic_benchmark():
    a = 42
    b = 17
    c = 0
    i = 0
    
    while i < ITERATIONS:
        c = a + b
        c = a - b
        c = a * b
        c = a / b
        i = i + 1
    end
    
    return c
end

# Array operations benchmark
func array_benchmark():
    arr = []
    i = 0
    j = 0
    
    while i < 1000:
        arr.push(i)
        i = i + 1
    end
    
    i = 0
    while i < ITERATIONS / 1000:
        j = 0
        while j < 1000:
            arr[j] = arr[j] + 1
            j = j + 1
        end
        i = i + 1
    end
    
    return arr[0]
end

# Function call benchmark
func simple_function(x):
    return x * 2 + 1
end

func function_benchmark():
    result = 0
    i = 0
    
    while i < ITERATIONS:
        result = simple_function(i)
        i = i + 1
    end
    
    return result
end

# Main benchmark runner
func run_benchmarks():
    print("=== Simple Performance Benchmark ===")
    print("Testing basic performance characteristics")
    print("")
    
    print("Running arithmetic benchmark...")
    result1 = arithmetic_benchmark()
    print("Arithmetic result: " + str(result1))
    print("")
    
    print("Running array benchmark...")
    result2 = array_benchmark()
    print("Array result: " + str(result2))
    print("")
    
    print("Running function call benchmark...")
    result3 = function_benchmark()
    print("Function call result: " + str(result3))
    print("")
    
    print("All benchmarks completed successfully!")
    return result1 + result2 + result3
end

# Run benchmarks
run_benchmarks()
