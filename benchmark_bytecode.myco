# Bytecode Performance Benchmark
import time;

print("Starting bytecode performance benchmark...");

# Test 1: Arithmetic operations
let start_time = time.now();
let sum = 0;
let i = 0;

while i < 1000000:
    sum = sum + i * 2;
    i = i + 1;
end

let end_time = time.now();
let arithmetic_time = end_time - start_time;

print("Arithmetic test completed in " + arithmetic_time.toString() + " seconds");
print("Sum: " + sum.toString());

# Test 2: Function calls
start_time = time.now();

func fibonacci(n: Int) -> Int:
    if n <= 1:
        return n;
    else:
        return fibonacci(n - 1) + fibonacci(n - 2);
    end
end

let fib_result = fibonacci(25);
end_time = time.now();
let function_time = end_time - start_time;

print("Fibonacci(25) = " + fib_result.toString() + " in " + function_time.toString() + " seconds");

# Test 3: Array operations
start_time = time.now();
let arr = [1, 2, 3, 4, 5];
let arr_sum = 0;

for i in range(100000):
    for j in range(5):
        arr_sum = arr_sum + arr[j];
    end
end

end_time = time.now();
let array_time = end_time - start_time;

print("Array operations completed in " + array_time.toString() + " seconds");
print("Array sum: " + arr_sum.toString());

print("Benchmark completed!");
